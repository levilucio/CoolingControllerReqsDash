package org.iets3.req.priority.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class Priority_Constraints extends BaseConstraintsDescriptor {
  public Priority_Constraints() {
    super(MetaAdapterFactory.getConcept(0x7a870bb787b6411eL, 0x92c2eb3e9e856127L, 0x690245617af9805L, "org.iets3.req.priority.structure.Priority"));
  }

  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(MetaAdapterFactory.getProperty(0x7a870bb787b6411eL, 0x92c2eb3e9e856127L, 0x690245617af9805L, 0x690245617af980aL, "weight"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0x7a870bb787b6411eL, 0x92c2eb3e9e856127L, 0x690245617af9805L, 0x690245617af980aL), this) {
      @Override
      public boolean hasOwnValidator() {
        return true;
      }
      @Override
      public boolean validateValue(SNode node, String propertyValue) {
        String propertyName = "weight";
        {
          int i = (SPropertyOperations.getInteger(propertyValue));
          return (i >= 0) && (i <= 100);
        }
      }
    });
    return properties;
  }
}
