package org.iets3.process.modelproperty.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(8);
  /*package*/ final ConceptDescriptor myConceptEmptyRequirementProperty = createDescriptorForEmptyRequirementProperty();
  /*package*/ final ConceptDescriptor myConceptEmptyTableProperty = createDescriptorForEmptyTableProperty();
  /*package*/ final ConceptDescriptor myConceptErrorFreeTableProperty = createDescriptorForErrorFreeTableProperty();
  /*package*/ final ConceptDescriptor myConceptGlossaryTermDefinedProperty = createDescriptorForGlossaryTermDefinedProperty();
  /*package*/ final ConceptDescriptor myConceptModelProperty = createDescriptorForModelProperty();
  /*package*/ final ConceptDescriptor myConceptProjectIsCreatedProperty = createDescriptorForProjectIsCreatedProperty();
  /*package*/ final ConceptDescriptor myConceptRequirementsChunkNotPresentProperty = createDescriptorForRequirementsChunkNotPresentProperty();
  /*package*/ final ConceptDescriptor myConceptRequirementsErrorFreeProperty = createDescriptorForRequirementsErrorFreeProperty();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptEmptyRequirementProperty.getId(), 0);
    myIndexMap.put(myConceptEmptyTableProperty.getId(), 1);
    myIndexMap.put(myConceptErrorFreeTableProperty.getId(), 2);
    myIndexMap.put(myConceptGlossaryTermDefinedProperty.getId(), 3);
    myIndexMap.put(myConceptModelProperty.getId(), 4);
    myIndexMap.put(myConceptProjectIsCreatedProperty.getId(), 5);
    myIndexMap.put(myConceptRequirementsChunkNotPresentProperty.getId(), 6);
    myIndexMap.put(myConceptRequirementsErrorFreeProperty.getId(), 7);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptEmptyRequirementProperty, myConceptEmptyTableProperty, myConceptErrorFreeTableProperty, myConceptGlossaryTermDefinedProperty, myConceptModelProperty, myConceptProjectIsCreatedProperty, myConceptRequirementsChunkNotPresentProperty, myConceptRequirementsErrorFreeProperty);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptEmptyRequirementProperty;
      case 1:
        return myConceptEmptyTableProperty;
      case 2:
        return myConceptErrorFreeTableProperty;
      case 3:
        return myConceptGlossaryTermDefinedProperty;
      case 4:
        return myConceptModelProperty;
      case 5:
        return myConceptProjectIsCreatedProperty;
      case 6:
        return myConceptRequirementsChunkNotPresentProperty;
      case 7:
        return myConceptRequirementsErrorFreeProperty;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForEmptyRequirementProperty() {
    return new ConceptDescriptorBuilder("org.iets3.process.modelproperty.structure.EmptyRequirementProperty", MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x20fc30679cdcb32eL)).super_("org.iets3.process.modelproperty.structure.ModelProperty").version(1).super_(MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL)).parents("org.iets3.process.modelproperty.structure.ModelProperty").parentIds(MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL)).sourceNode(new SNodePointer("r:0e362b8d-d9a6-45f0-9d73-14f8c7b5dfd0(org.iets3.process.modelproperty.structure)", "2376827924916253486")).create();
  }
  private static ConceptDescriptor createDescriptorForEmptyTableProperty() {
    return new ConceptDescriptorBuilder("org.iets3.process.modelproperty.structure.EmptyTableProperty", MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x7766bbf6402f0d0fL)).super_("org.iets3.process.modelproperty.structure.ModelProperty").version(1).super_(MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL)).parents("org.iets3.process.modelproperty.structure.ModelProperty").parentIds(MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL)).sourceNode(new SNodePointer("r:0e362b8d-d9a6-45f0-9d73-14f8c7b5dfd0(org.iets3.process.modelproperty.structure)", "8603770804451085583")).create();
  }
  private static ConceptDescriptor createDescriptorForErrorFreeTableProperty() {
    return new ConceptDescriptorBuilder("org.iets3.process.modelproperty.structure.ErrorFreeTableProperty", MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x7766bbf64033bf40L)).super_("org.iets3.process.modelproperty.structure.ModelProperty").version(1).super_(MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL)).parents("org.iets3.process.modelproperty.structure.ModelProperty").parentIds(MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL)).sourceNode(new SNodePointer("r:0e362b8d-d9a6-45f0-9d73-14f8c7b5dfd0(org.iets3.process.modelproperty.structure)", "8603770804451393344")).create();
  }
  private static ConceptDescriptor createDescriptorForGlossaryTermDefinedProperty() {
    return new ConceptDescriptorBuilder("org.iets3.process.modelproperty.structure.GlossaryTermDefinedProperty", MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x3236b854d3dc3d96L)).super_("org.iets3.process.modelproperty.structure.ModelProperty").version(1).super_(MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL)).parents("org.iets3.process.modelproperty.structure.ModelProperty").parentIds(MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL)).sourceNode(new SNodePointer("r:0e362b8d-d9a6-45f0-9d73-14f8c7b5dfd0(org.iets3.process.modelproperty.structure)", "3618282025109962134")).create();
  }
  private static ConceptDescriptor createDescriptorForModelProperty() {
    return new ConceptDescriptorBuilder("org.iets3.process.modelproperty.structure.ModelProperty", MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().sourceNode(new SNodePointer("r:0e362b8d-d9a6-45f0-9d73-14f8c7b5dfd0(org.iets3.process.modelproperty.structure)", "6260217064766302491")).create();
  }
  private static ConceptDescriptor createDescriptorForProjectIsCreatedProperty() {
    return new ConceptDescriptorBuilder("org.iets3.process.modelproperty.structure.ProjectIsCreatedProperty", MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x7766bbf6402d4599L)).super_("org.iets3.process.modelproperty.structure.ModelProperty").version(1).super_(MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL)).parents("org.iets3.process.modelproperty.structure.ModelProperty").parentIds(MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL)).sourceNode(new SNodePointer("r:0e362b8d-d9a6-45f0-9d73-14f8c7b5dfd0(org.iets3.process.modelproperty.structure)", "8603770804450968985")).create();
  }
  private static ConceptDescriptor createDescriptorForRequirementsChunkNotPresentProperty() {
    return new ConceptDescriptorBuilder("org.iets3.process.modelproperty.structure.RequirementsChunkNotPresentProperty", MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x3236b854d3d92640L)).super_("org.iets3.process.modelproperty.structure.ModelProperty").version(1).super_(MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL)).parents("org.iets3.process.modelproperty.structure.ModelProperty").parentIds(MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL)).sourceNode(new SNodePointer("r:0e362b8d-d9a6-45f0-9d73-14f8c7b5dfd0(org.iets3.process.modelproperty.structure)", "3618282025109759552")).create();
  }
  private static ConceptDescriptor createDescriptorForRequirementsErrorFreeProperty() {
    return new ConceptDescriptorBuilder("org.iets3.process.modelproperty.structure.RequirementsErrorFreeProperty", MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x20fc30679cdcc80cL)).super_("org.iets3.process.modelproperty.structure.ModelProperty").version(1).super_(MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL)).parents("org.iets3.process.modelproperty.structure.ModelProperty").parentIds(MetaIdFactory.conceptId(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL)).sourceNode(new SNodePointer("r:0e362b8d-d9a6-45f0-9d73-14f8c7b5dfd0(org.iets3.process.modelproperty.structure)", "2376827924916258828")).create();
  }
}
