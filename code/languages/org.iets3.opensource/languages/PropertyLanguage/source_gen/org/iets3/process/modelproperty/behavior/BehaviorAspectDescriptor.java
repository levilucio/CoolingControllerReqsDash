package org.iets3.process.modelproperty.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Map;
import java.util.HashMap;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myEmptyRequirementProperty__BehaviorDescriptor = new EmptyRequirementProperty__BehaviorDescriptor();
  private final BHDescriptor myRequirementsErrorFreeProperty__BehaviorDescriptor = new RequirementsErrorFreeProperty__BehaviorDescriptor();
  private final BHDescriptor myRequirementsChunkNotPresentProperty__BehaviorDescriptor = new RequirementsChunkNotPresentProperty__BehaviorDescriptor();
  private final BHDescriptor myGlossaryTermDefinedProperty__BehaviorDescriptor = new GlossaryTermDefinedProperty__BehaviorDescriptor();
  private final BHDescriptor myModelProperty__BehaviorDescriptor = new ModelProperty__BehaviorDescriptor();
  private final BHDescriptor myProjectIsCreatedProperty__BehaviorDescriptor = new ProjectIsCreatedProperty__BehaviorDescriptor();
  private final BHDescriptor myEmptyTableProperty__BehaviorDescriptor = new EmptyTableProperty__BehaviorDescriptor();
  private final BHDescriptor myErrorFreeTableProperty__BehaviorDescriptor = new ErrorFreeTableProperty__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    {
      SAbstractConcept cncpt = concept;
      Integer preIndex = indices_846f5o_a0l.get(cncpt);
      int switchIndex = (preIndex == null ? -1 : preIndex);
      switch (switchIndex) {
        case 0:
          if (true) {
            return myEmptyRequirementProperty__BehaviorDescriptor;
          }
          break;
        case 1:
          if (true) {
            return myEmptyTableProperty__BehaviorDescriptor;
          }
          break;
        case 2:
          if (true) {
            return myErrorFreeTableProperty__BehaviorDescriptor;
          }
          break;
        case 3:
          if (true) {
            return myGlossaryTermDefinedProperty__BehaviorDescriptor;
          }
          break;
        case 4:
          if (true) {
            return myModelProperty__BehaviorDescriptor;
          }
          break;
        case 5:
          if (true) {
            return myProjectIsCreatedProperty__BehaviorDescriptor;
          }
          break;
        case 6:
          if (true) {
            return myRequirementsChunkNotPresentProperty__BehaviorDescriptor;
          }
          break;
        case 7:
          if (true) {
            return myRequirementsErrorFreeProperty__BehaviorDescriptor;
          }
          break;
        default:
          // default 
      }
    }
    return null;
  }
  private static Map<SAbstractConcept, Integer> buildConceptIndices(SAbstractConcept... concepts) {
    HashMap<SAbstractConcept, Integer> res = new HashMap<SAbstractConcept, Integer>();
    int counter = 0;
    for (SAbstractConcept c : concepts) {
      res.put(c, counter++);
    }
    return res;
  }
  private static final Map<SAbstractConcept, Integer> indices_846f5o_a0l = buildConceptIndices(MetaAdapterFactory.getConcept(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x20fc30679cdcb32eL, "org.iets3.process.modelproperty.structure.EmptyRequirementProperty"), MetaAdapterFactory.getConcept(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x7766bbf6402f0d0fL, "org.iets3.process.modelproperty.structure.EmptyTableProperty"), MetaAdapterFactory.getConcept(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x7766bbf64033bf40L, "org.iets3.process.modelproperty.structure.ErrorFreeTableProperty"), MetaAdapterFactory.getConcept(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x3236b854d3dc3d96L, "org.iets3.process.modelproperty.structure.GlossaryTermDefinedProperty"), MetaAdapterFactory.getConcept(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x56e0c2409a3be91bL, "org.iets3.process.modelproperty.structure.ModelProperty"), MetaAdapterFactory.getConcept(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x7766bbf6402d4599L, "org.iets3.process.modelproperty.structure.ProjectIsCreatedProperty"), MetaAdapterFactory.getConcept(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x3236b854d3d92640L, "org.iets3.process.modelproperty.structure.RequirementsChunkNotPresentProperty"), MetaAdapterFactory.getConcept(0xecea2a9218f4e3bL, 0xbadca524a5addb7cL, 0x20fc30679cdcc80cL, "org.iets3.process.modelproperty.structure.RequirementsErrorFreeProperty"));
}
