package org.iets3.req.plugin.plugin;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.List;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;

public class Helper {

  public static boolean isUnderRequirement(SNode ctx) {
    return (SNodeOperations.getNodeAncestor(ctx, MetaAdapterFactory.getConcept(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc8195aeL, "org.iets3.req.core.structure.AbstractRequirement"), false, false) != null);
  }

  public static SNode getRequirement(SNode ctx) {
    return SNodeOperations.getNodeAncestor(ctx, MetaAdapterFactory.getConcept(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc8195aeL, "org.iets3.req.core.structure.AbstractRequirement"), false, false);
  }

  public static boolean isUnderDoc(SNode ctx) {
    return (SNodeOperations.getNodeAncestor(ctx, MetaAdapterFactory.getInterfaceConcept(0x2374bc907e3741f1L, 0xa9c4c2e35194c36aL, 0x2e7fd03a4b7a1835L, "com.mbeddr.doc.structure.IDocumentContent"), false, false) != null);
  }
  public static SNode docContent(SNode ctx) {
    return SNodeOperations.getNodeAncestor(ctx, MetaAdapterFactory.getInterfaceConcept(0x2374bc907e3741f1L, 0xa9c4c2e35194c36aL, 0x2e7fd03a4b7a1835L, "com.mbeddr.doc.structure.IDocumentContent"), false, false);
  }


  public static List<SAbstractConcept> getValidDocContents(SModel m) {
    List<SAbstractConcept> res = ListSequence.fromList(new ArrayList<SAbstractConcept>());
    ListSequence.fromList(res).addSequence(ListSequence.fromList(SConceptOperations.getAllSubConcepts(MetaAdapterFactory.getInterfaceConcept(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x7a4c2a11e6426d50L, "org.iets3.req.core.structure.IReqDocContent"), m)).where(new IWhereFilter<SAbstractConcept>() {
      public boolean accept(SAbstractConcept cc) {
        return !(cc.isAbstract()) && !(isEmptyString(SConceptOperations.conceptAlias(cc)));
      }
    }));
    ListSequence.fromList(res).addElement(MetaAdapterFactory.getConcept(0x2374bc907e3741f1L, 0xa9c4c2e35194c36aL, 0x2e7fd03a4b7ccef2L, "com.mbeddr.doc.structure.TextParagraph"));
    ListSequence.fromList(res).addElement(MetaAdapterFactory.getConcept(0x2374bc907e3741f1L, 0xa9c4c2e35194c36aL, 0x58a16bfbe08b4e13L, "com.mbeddr.doc.structure.ImageParagraph"));
    ListSequence.fromList(res).addElement(MetaAdapterFactory.getConcept(0x2374bc907e3741f1L, 0xa9c4c2e35194c36aL, 0x4aa4d574b7bf1e71L, "com.mbeddr.doc.structure.ItemList"));
    return res;
  }


  private static boolean isEmptyString(String str) {
    return str == null || str.length() == 0;
  }
}
