package org.iets3.req.core.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(30);
  /*package*/ final ConceptDescriptor myConceptAbstractRequirement = createDescriptorForAbstractRequirement();
  /*package*/ final ConceptDescriptor myConceptCCTag = createDescriptorForCCTag();
  /*package*/ final ConceptDescriptor myConceptDefaultRequirement = createDescriptorForDefaultRequirement();
  /*package*/ final ConceptDescriptor myConceptHeaderRequirement = createDescriptorForHeaderRequirement();
  /*package*/ final ConceptDescriptor myConceptIReqContainer = createDescriptorForIReqContainer();
  /*package*/ final ConceptDescriptor myConceptIReqContent = createDescriptorForIReqContent();
  /*package*/ final ConceptDescriptor myConceptIReqDocContent = createDescriptorForIReqDocContent();
  /*package*/ final ConceptDescriptor myConceptIReqRefCtx = createDescriptorForIReqRefCtx();
  /*package*/ final ConceptDescriptor myConceptIRequirementsRelation = createDescriptorForIRequirementsRelation();
  /*package*/ final ConceptDescriptor myConceptIconDummyAddChildReq = createDescriptorForIconDummyAddChildReq();
  /*package*/ final ConceptDescriptor myConceptIconDummyAddSiblingReq = createDescriptorForIconDummyAddSiblingReq();
  /*package*/ final ConceptDescriptor myConceptIconDummyDeleteReq = createDescriptorForIconDummyDeleteReq();
  /*package*/ final ConceptDescriptor myConceptKind = createDescriptorForKind();
  /*package*/ final ConceptDescriptor myConceptKindFunctional = createDescriptorForKindFunctional();
  /*package*/ final ConceptDescriptor myConceptKindNonFunctional = createDescriptorForKindNonFunctional();
  /*package*/ final ConceptDescriptor myConceptNonMergeableWord = createDescriptorForNonMergeableWord();
  /*package*/ final ConceptDescriptor myConceptPlainReqRefWord = createDescriptorForPlainReqRefWord();
  /*package*/ final ConceptDescriptor myConceptPriorityTag = createDescriptorForPriorityTag();
  /*package*/ final ConceptDescriptor myConceptRelKindConflicts = createDescriptorForRelKindConflicts();
  /*package*/ final ConceptDescriptor myConceptRelTag = createDescriptorForRelTag();
  /*package*/ final ConceptDescriptor myConceptRelationKind = createDescriptorForRelationKind();
  /*package*/ final ConceptDescriptor myConceptReqRef = createDescriptorForReqRef();
  /*package*/ final ConceptDescriptor myConceptReqRelWord = createDescriptorForReqRelWord();
  /*package*/ final ConceptDescriptor myConceptRequirementsChunk = createDescriptorForRequirementsChunk();
  /*package*/ final ConceptDescriptor myConceptRequirementsDocSection = createDescriptorForRequirementsDocSection();
  /*package*/ final ConceptDescriptor myConceptState = createDescriptorForState();
  /*package*/ final ConceptDescriptor myConceptStateAccepted = createDescriptorForStateAccepted();
  /*package*/ final ConceptDescriptor myConceptStateDone = createDescriptorForStateDone();
  /*package*/ final ConceptDescriptor myConceptStateNew = createDescriptorForStateNew();
  /*package*/ final ConceptDescriptor myConceptTag = createDescriptorForTag();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbstractRequirement.getId(), 0);
    myIndexMap.put(myConceptCCTag.getId(), 1);
    myIndexMap.put(myConceptDefaultRequirement.getId(), 2);
    myIndexMap.put(myConceptHeaderRequirement.getId(), 3);
    myIndexMap.put(myConceptIReqContainer.getId(), 4);
    myIndexMap.put(myConceptIReqContent.getId(), 5);
    myIndexMap.put(myConceptIReqDocContent.getId(), 6);
    myIndexMap.put(myConceptIReqRefCtx.getId(), 7);
    myIndexMap.put(myConceptIRequirementsRelation.getId(), 8);
    myIndexMap.put(myConceptIconDummyAddChildReq.getId(), 9);
    myIndexMap.put(myConceptIconDummyAddSiblingReq.getId(), 10);
    myIndexMap.put(myConceptIconDummyDeleteReq.getId(), 11);
    myIndexMap.put(myConceptKind.getId(), 12);
    myIndexMap.put(myConceptKindFunctional.getId(), 13);
    myIndexMap.put(myConceptKindNonFunctional.getId(), 14);
    myIndexMap.put(myConceptNonMergeableWord.getId(), 15);
    myIndexMap.put(myConceptPlainReqRefWord.getId(), 16);
    myIndexMap.put(myConceptPriorityTag.getId(), 17);
    myIndexMap.put(myConceptRelKindConflicts.getId(), 18);
    myIndexMap.put(myConceptRelTag.getId(), 19);
    myIndexMap.put(myConceptRelationKind.getId(), 20);
    myIndexMap.put(myConceptReqRef.getId(), 21);
    myIndexMap.put(myConceptReqRelWord.getId(), 22);
    myIndexMap.put(myConceptRequirementsChunk.getId(), 23);
    myIndexMap.put(myConceptRequirementsDocSection.getId(), 24);
    myIndexMap.put(myConceptState.getId(), 25);
    myIndexMap.put(myConceptStateAccepted.getId(), 26);
    myIndexMap.put(myConceptStateDone.getId(), 27);
    myIndexMap.put(myConceptStateNew.getId(), 28);
    myIndexMap.put(myConceptTag.getId(), 29);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractRequirement, myConceptCCTag, myConceptDefaultRequirement, myConceptHeaderRequirement, myConceptIReqContainer, myConceptIReqContent, myConceptIReqDocContent, myConceptIReqRefCtx, myConceptIRequirementsRelation, myConceptIconDummyAddChildReq, myConceptIconDummyAddSiblingReq, myConceptIconDummyDeleteReq, myConceptKind, myConceptKindFunctional, myConceptKindNonFunctional, myConceptNonMergeableWord, myConceptPlainReqRefWord, myConceptPriorityTag, myConceptRelKindConflicts, myConceptRelTag, myConceptRelationKind, myConceptReqRef, myConceptReqRelWord, myConceptRequirementsChunk, myConceptRequirementsDocSection, myConceptState, myConceptStateAccepted, myConceptStateDone, myConceptStateNew, myConceptTag);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbstractRequirement;
      case 1:
        return myConceptCCTag;
      case 2:
        return myConceptDefaultRequirement;
      case 3:
        return myConceptHeaderRequirement;
      case 4:
        return myConceptIReqContainer;
      case 5:
        return myConceptIReqContent;
      case 6:
        return myConceptIReqDocContent;
      case 7:
        return myConceptIReqRefCtx;
      case 8:
        return myConceptIRequirementsRelation;
      case 9:
        return myConceptIconDummyAddChildReq;
      case 10:
        return myConceptIconDummyAddSiblingReq;
      case 11:
        return myConceptIconDummyDeleteReq;
      case 12:
        return myConceptKind;
      case 13:
        return myConceptKindFunctional;
      case 14:
        return myConceptKindNonFunctional;
      case 15:
        return myConceptNonMergeableWord;
      case 16:
        return myConceptPlainReqRefWord;
      case 17:
        return myConceptPriorityTag;
      case 18:
        return myConceptRelKindConflicts;
      case 19:
        return myConceptRelTag;
      case 20:
        return myConceptRelationKind;
      case 21:
        return myConceptReqRef;
      case 22:
        return myConceptReqRelWord;
      case 23:
        return myConceptRequirementsChunk;
      case 24:
        return myConceptRequirementsDocSection;
      case 25:
        return myConceptState;
      case 26:
        return myConceptStateAccepted;
      case 27:
        return myConceptStateDone;
      case 28:
        return myConceptStateNew;
      case 29:
        return myConceptTag;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForAbstractRequirement() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.AbstractRequirement", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc8195aeL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "org.iets3.core.base.structure.IValidNamedConcept", "org.iets3.req.core.structure.IReqContainer").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x32f64a31a179034L), MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc87c94fL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x477d8ab2bc8195f3L, "title", new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5151426049053136371")), new ConceptDescriptorBuilder.Prop(0xb54392f5f8273cdL, "uniqueID", new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "816340308089533389"))).properties("title", "uniqueID").abstract_().sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5151426049053136302")).create();
  }
  private static ConceptDescriptor createDescriptorForCCTag() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.CCTag", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x75ac1dcdb58896b7L)).super_("org.iets3.req.core.structure.Tag").version(1).super_(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc895b1cL)).parents("org.iets3.req.core.structure.Tag").parentIds(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc895b1cL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x75ac1dcdb58896b8L, "users", MetaIdFactory.conceptId(0xf95247f1a2854e98L, 0x864f7f4b1723a807L, 0x75ac1dcdb567a3e7L), true, true, false, new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "8479184967782930104"))).children(new String[]{"users"}, new boolean[]{true}).alias("CC", "").sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "8479184967782930103")).create();
  }
  private static ConceptDescriptor createDescriptorForDefaultRequirement() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.DefaultRequirement", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc8195b9L)).super_("org.iets3.req.core.structure.AbstractRequirement").version(1).super_(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc8195aeL)).parents("org.iets3.req.core.structure.AbstractRequirement").parentIds(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc8195aeL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x477d8ab2bc895b1eL, "kind", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc895b1dL), false, false, false, new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5151426049053645598")), new ConceptDescriptorBuilder.Link(0x477d8ab2bc895b23L, "tags", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc895b1cL), true, true, false, new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5151426049053645603")), new ConceptDescriptorBuilder.Link(0x5463f52ab0dddfbL, "state", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5463f52ab0ddac7L), false, false, false, new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "380060842849066491")), new ConceptDescriptorBuilder.Link(0x477d8ab2bc883be0L, "doc", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc883be3L), false, false, false, new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5151426049053572064")), new ConceptDescriptorBuilder.Link(0x75ac1dcdb567ca8bL, "owner", MetaIdFactory.conceptId(0xf95247f1a2854e98L, 0x864f7f4b1723a807L, 0x75ac1dcdb567a3e7L), false, false, false, new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "8479184967780780683"))).children(new String[]{"kind", "tags", "state", "doc", "owner"}, new boolean[]{false, true, false, false, false}).alias("DefaultRequirement", "").sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5151426049053136313")).create();
  }
  private static ConceptDescriptor createDescriptorForHeaderRequirement() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.HeaderRequirement", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x3ab49e14c25e58e6L)).super_("org.iets3.req.core.structure.AbstractRequirement").version(1).super_(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc8195aeL)).parents("org.iets3.req.core.structure.AbstractRequirement").parentIds(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc8195aeL)).sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "4230179762005235942")).create();
  }
  private static ConceptDescriptor createDescriptorForIReqContainer() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.IReqContainer", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc87c94fL)).version(1).interface_().parents("com.mbeddr.core.base.structure.IContainerOfUniqueNames").parentIds(MetaIdFactory.conceptId(0xd4280a54f6df4383L, 0xaa41d1b2bffa7eb1L, 0x46b83c1781e763b4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x477d8ab2bc87c9a5L, "requirements", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc8195aeL), true, true, false, new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5151426049053542821"))).children(new String[]{"requirements"}, new boolean[]{true}).sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5151426049053542735")).create();
  }
  private static ConceptDescriptor createDescriptorForIReqContent() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.IReqContent", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc8195b5L)).version(1).interface_().sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5151426049053136309")).create();
  }
  private static ConceptDescriptor createDescriptorForIReqDocContent() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.IReqDocContent", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x7a4c2a11e6426d50L)).version(1).interface_().sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "8812464827223141712")).create();
  }
  private static ConceptDescriptor createDescriptorForIReqRefCtx() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.IReqRefCtx", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x382d84c5e1a03f05L)).version(1).interface_().sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "4048037625504743173")).create();
  }
  private static ConceptDescriptor createDescriptorForIRequirementsRelation() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.IRequirementsRelation", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5fd70b0af6e37815L)).version(1).interface_().parents("org.iets3.req.core.structure.IReqRefCtx").parentIds(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x382d84c5e1a03f05L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x5fd70b0af6e3a4beL, "kind", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5fd70b0af6e3a494L), false, false, false, new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "6906000695315637438")), new ConceptDescriptorBuilder.Link(0x5fd70b0af6e38904L, "targets", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5fd70b0af6e37818L), false, true, false, new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "6906000695315630340"))).children(new String[]{"kind", "targets"}, new boolean[]{false, true}).sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "6906000695315626005")).create();
  }
  private static ConceptDescriptor createDescriptorForIconDummyAddChildReq() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.IconDummyAddChildReq", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x4a9d5259fc70a855L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5376544076591048789")).create();
  }
  private static ConceptDescriptor createDescriptorForIconDummyAddSiblingReq() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.IconDummyAddSiblingReq", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x4a9d5259fc70a85fL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5376544076591048799")).create();
  }
  private static ConceptDescriptor createDescriptorForIconDummyDeleteReq() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.IconDummyDeleteReq", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x4a9d5259fc70a869L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5376544076591048809")).create();
  }
  private static ConceptDescriptor createDescriptorForKind() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.Kind", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc895b1dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5151426049053645597")).create();
  }
  private static ConceptDescriptor createDescriptorForKindFunctional() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.KindFunctional", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc895d1dL)).super_("org.iets3.req.core.structure.Kind").version(1).super_(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc895b1dL)).parents("org.iets3.req.core.structure.Kind").parentIds(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc895b1dL)).alias("functional", "").sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5151426049053646109")).create();
  }
  private static ConceptDescriptor createDescriptorForKindNonFunctional() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.KindNonFunctional", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0xb54392f5f81ecf4L)).super_("org.iets3.req.core.structure.Kind").version(1).super_(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc895b1dL)).parents("org.iets3.req.core.structure.Kind").parentIds(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc895b1dL)).alias("non functional", "").sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "816340308089498868")).create();
  }
  private static ConceptDescriptor createDescriptorForNonMergeableWord() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.NonMergeableWord", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x7bb20d258b5f79a5L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "de.slisson.mps.richtext.structure.IWord").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x92d2ea165a424fdfL, 0xa676c7604efe3504L, 0x237c8da86a9e7aecL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x7bb20d258b60d4aeL, "escapedValue", new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "8913201067422962862"))).properties("escapedValue").sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "8913201067422874021")).create();
  }
  private static ConceptDescriptor createDescriptorForPlainReqRefWord() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.PlainReqRefWord", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x7a4c2a11e62715a7L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "de.slisson.mps.richtext.structure.IWord", "org.iets3.req.core.structure.IReqRefCtx").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x92d2ea165a424fdfL, 0xa676c7604efe3504L, 0x237c8da86a9e7aecL), MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x382d84c5e1a03f05L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x5fd70b0af6e38967L, "ref", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5fd70b0af6e37818L), false, false, false, new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "6906000695315630439"))).children(new String[]{"ref"}, new boolean[]{false}).alias("@req", "").sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "8812464827221349799")).create();
  }
  private static ConceptDescriptor createDescriptorForPriorityTag() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.PriorityTag", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x7b990bd188cde19dL)).super_("org.iets3.req.core.structure.Tag").version(1).super_(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc895b1cL)).parents("org.iets3.req.core.structure.Tag").parentIds(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc895b1cL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x7521dc702a7ff82fL, "priorityValue", MetaIdFactory.conceptId(0x7a870bb787b6411eL, 0x92c2eb3e9e856127L, 0x690245617af9805L), true, new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "8440269550976497711"))).references("priorityValue").alias("priority", "the priority of the requirement").sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "8906162732673130909")).create();
  }
  private static ConceptDescriptor createDescriptorForRelKindConflicts() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.RelKindConflicts", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5fd70b0af6e3a4bdL)).super_("org.iets3.req.core.structure.RelationKind").version(1).super_(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5fd70b0af6e3a494L)).parents("org.iets3.req.core.structure.RelationKind").parentIds(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5fd70b0af6e3a494L)).alias("conflicts with", "").sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "6906000695315637437")).create();
  }
  private static ConceptDescriptor createDescriptorForRelTag() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.RelTag", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5fd70b0af6e5d5fbL)).super_("org.iets3.req.core.structure.Tag").version(1).super_(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc895b1cL)).parents("org.iets3.req.core.structure.Tag", "org.iets3.req.core.structure.IRequirementsRelation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc895b1cL), MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5fd70b0af6e37815L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("", "relationship with another requirement").sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "6906000695315781115")).create();
  }
  private static ConceptDescriptor createDescriptorForRelationKind() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.RelationKind", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5fd70b0af6e3a494L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "6906000695315637396")).create();
  }
  private static ConceptDescriptor createDescriptorForReqRef() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.ReqRef", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5fd70b0af6e37818L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x5fd70b0af6e37819L, "req", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc8195aeL), false, new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "6906000695315626009"))).references("req").sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "6906000695315626008")).create();
  }
  private static ConceptDescriptor createDescriptorForReqRelWord() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.ReqRelWord", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5fd70b0af6e3a6a8L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "de.slisson.mps.richtext.structure.IWord", "org.iets3.req.core.structure.IRequirementsRelation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x92d2ea165a424fdfL, 0xa676c7604efe3504L, 0x237c8da86a9e7aecL), MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5fd70b0af6e37815L)).alias("@rel", "").sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "6906000695315637928")).create();
  }
  private static ConceptDescriptor createDescriptorForRequirementsChunk() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.RequirementsChunk", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc81949cL)).super_("com.mbeddr.core.base.structure.Chunk").version(1).super_(MetaIdFactory.conceptId(0xd4280a54f6df4383L, 0xaa41d1b2bffa7eb1L, 0x6315bcc6effb4ea6L)).parents("com.mbeddr.core.base.structure.Chunk", "org.iets3.req.core.structure.IReqContainer", "com.mbeddr.doc.structure.IDocumentLike", "org.iets3.core.base.structure.ISpecRoot").parentIds(MetaIdFactory.conceptId(0xd4280a54f6df4383L, 0xaa41d1b2bffa7eb1L, 0x6315bcc6effb4ea6L), MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc87c94fL), MetaIdFactory.conceptId(0x2374bc907e3741f1L, 0xa9c4c2e35194c36aL, 0x5c64b4307041a0cfL), MetaIdFactory.conceptId(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x6c4f9fd23e57eb38L)).rootable().sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5151426049053136028")).create();
  }
  private static ConceptDescriptor createDescriptorForRequirementsDocSection() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.RequirementsDocSection", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc883be3L)).super_("com.mbeddr.doc.structure.AbstractSection").version(1).super_(MetaIdFactory.conceptId(0x2374bc907e3741f1L, 0xa9c4c2e35194c36aL, 0x2e7fd03a4b7c6bdeL)).parents("com.mbeddr.doc.structure.AbstractSection", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault", "org.iets3.req.core.structure.IReqDocContent").parentIds(MetaIdFactory.conceptId(0x2374bc907e3741f1L, 0xa9c4c2e35194c36aL, 0x2e7fd03a4b7c6bdeL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL), MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x7a4c2a11e6426d50L)).sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5151426049053572067")).create();
  }
  private static ConceptDescriptor createDescriptorForState() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.State", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5463f52ab0ddac7L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "380060842849065671")).create();
  }
  private static ConceptDescriptor createDescriptorForStateAccepted() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.StateAccepted", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x7b990bd188d02e2cL)).super_("org.iets3.req.core.structure.State").version(1).super_(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5463f52ab0ddac7L)).parents("org.iets3.req.core.structure.State").parentIds(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5463f52ab0ddac7L)).alias("accepted", "").sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "8906162732673281580")).create();
  }
  private static ConceptDescriptor createDescriptorForStateDone() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.StateDone", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x7b990bd188d0c783L)).super_("org.iets3.req.core.structure.State").version(1).super_(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5463f52ab0ddac7L)).parents("org.iets3.req.core.structure.State").parentIds(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5463f52ab0ddac7L)).alias("done", "").sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "8906162732673320835")).create();
  }
  private static ConceptDescriptor createDescriptorForStateNew() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.StateNew", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5463f52ab0ddacbL)).super_("org.iets3.req.core.structure.State").version(1).super_(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5463f52ab0ddac7L)).parents("org.iets3.req.core.structure.State").parentIds(MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x5463f52ab0ddac7L)).alias("new", "").sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "380060842849065675")).create();
  }
  private static ConceptDescriptor createDescriptorForTag() {
    return new ConceptDescriptorBuilder("org.iets3.req.core.structure.Tag", MetaIdFactory.conceptId(0xa3c6f64241b744cbL, 0x951b463b8427a245L, 0x477d8ab2bc895b1cL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().sourceNode(new SNodePointer("r:82415404-e5c7-47c8-ae5b-951fc882e316(org.iets3.req.core.structure)", "5151426049053645596")).create();
  }
}
